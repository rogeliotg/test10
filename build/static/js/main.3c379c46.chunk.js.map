{"version":3,"sources":["../../gi2challenge/src/Util.js","../../gi2challenge/src/components/ErrorBoundary.js","../../gi2challenge/src/components/TOOLTIP.js","../../gi2challenge/src/components/SWIPETRISTATE.js","../../gi2challenge/src/components/DEVELOPER.js","../../gi2challenge/src/App.js","../../gi2challenge/src/serviceWorker.js","../../gi2challenge/src/index.js"],"names":["size","obj","key","hasOwnProperty","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","fetch","then","response","json","react_default","a","createElement","class","children","Component","TOOLTIP","console","log","t","tooltiphtml","tactil","dist_default","className","content","id","arrowSize","tipContentHover","eventOn","eventOff","hoverDelay","useHover","React","SWIPETRISTATE","onSwipeLeft","bind","assertThisInitialized","onSwipeRight","title","handleResponse","counter","boxStyle","height","maxWidth","border","background","padding","fontSize","backgroundImage","urlimg","components_ErrorBoundary","lib_default","style","dangerouslySetInnerHTML","__html","text","TOOLTIP_TOOLTIP","falsetrue","onClick","DEVELOPER","allStorage","platformData","aux","characterSet","document","userAgent","navigator","cookieEnabled","languages","maxTouchPoints","screenwidth","window","screen","width","screenheight","inwinw","innerWidth","inwinh","innerHeight","platform","archive","keys","localStorage","i","length","truncate","getItem","s","substring","totalstate","mode","position","right","top","backgroundColor","react_json_tree_lib_default","data","theme","classname","changeMode","App","page","questions","responses","nq","countMode","handlePageChange","loadQuestions","sumCorrect","count3","c","m","z","correct_answer","_this2","results","evt","b","r","rows","q","push","question","toUpperCase","p","SWIPETRISTATE_SWIPETRISTATE","category","DEVELOPER_DEVELOPER","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c379c46.chunk.js","sourcesContent":["const size = (obj) => {\n\n    var size = 0;\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) size++;\n    }\n    return size;\n}\nconst saveErrorServer= (str) => {\n    fetch('https://myserver.com/log?err='+str)\n    .then(response => response.json())\n    .then();\n}\n\nexport { saveErrorServer, size };","import React, { Component } from 'react';\n//import { Card, CardMedia, CardTitle } from 'react-toolbox/lib/card';\nimport { saveErrorServer } from \"../Util.js\";\n\n/*const style = {\n  width: '350px',\n  marginLeft: '20px',\n  marginTop: '20px',\n  display: 'inline-block'\n};*/\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    saveErrorServer(error, info);\n  }\n\n  render() {\n    if(this.state.hasError) {\n      return (<div class=\"carderror\">\n      <h3>Sorry Something went wrong!!!</h3><p>Refresh the page or try later</p></div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\r\nimport Tooltip from 'react-tooltip-lite';\r\n\r\nexport default class TOOLTIP extends React.Component {\r\n /*OJO: el tipContentHover sirve para mantener el tooltip mientras el ratón pasa por encima, permitiendo click en links internos al tooltip html*/\r\n componentDidCatch(error, info) {\r\n  // Display fallback UI\r\n  this.setState({ hasError: false });\r\n  // You can also log the error to an error reporting service\r\n  console.log(\"ERror de TOOLTIP, cuidado que no sea dentro sino en Tooltip: \"+error);\r\n  console.log(\"info: \"+info);\r\n }\r\n\r\n  render () {\r\n    var t = this.props.tooltiphtml;\r\n    return this.props.tactil ?\r\n      <Tooltip className={this.props.className} content={t}  id=\"tooltip\" arrowSize={5} tipContentHover\r\n       eventOn=\"onClick\" eventOff=\"onMouseOut\" hoverDelay={2500} useHover={false}>\r\n        {this.props.children}</Tooltip>\r\n        :\r\n        <Tooltip className={this.props.className} content={t}  id=\"tooltip\" arrowSize={5} tipContentHover>\r\n        {this.props.children}</Tooltip>;\r\n  }\r\n}\r\n","\nimport React from 'react';\n//import ReactDOM from 'react-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport TOOLTIP from './TOOLTIP';\nimport Swipe from 'react-easy-swipe';\n//var _ = require('lodash'); //cambio underscore por lodash, mas rapido completo y com menos bugs import _ from 'underscore';\n//var s = require(\"underscore.string\");\nexport default class SWIPETRISTATE extends React.Component {\n\n    handleInit() {\n        console.log(\"swipetristate instance has initialised\", this.title);\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.onSwipeLeft = this.onSwipeLeft.bind(this);\n        this.onSwipeRight = this.onSwipeRight.bind(this);\n\n    }\n   /* onSwipeStart(event) {\n        console.log('Start swiping...', event);\n      }\n\n      onSwipeMove(position, event) {\n        console.log(`Moved ${position.x} pixels horizontally`, event);\n        console.log(`Moved ${position.y} pixels vertically`, event);\n      }\n\n      onSwipeEnd(event) {\n        console.log('End swiping...', event);\n      }*/\n    onSwipeLeft() {\n        this.props.handleResponse(this.props.counter, false);\n    }\n    onSwipeRight() {\n        this.props.handleResponse(this.props.counter, true);\n    }\n    render () {\n        const boxStyle = {\n            height: '90%',\n            maxWidth: '90%',\n            border: '1px solid black',\n            background: '#222',\n            padding: '20px',\n            fontSize: '1em',\n            backgroundImage: this.props.urlimg\n          };\n          //every component is decorated with ErrorBoundary, to aisle react component errors and send to server produced errores for debug\n        //just on this test, I will not declared saveErrorServer on main App\n        return (\n        <ErrorBoundary>\n            <Swipe onSwipeLeft={this.onSwipeLeft} onSwipeRight={this.onSwipeRight}>\n                <div style={boxStyle}>\n                    <p></p><p>{this.props.title}</p>\n                    <div><p></p><p className=\"flexContainer\" dangerouslySetInnerHTML={{ __html: this.props.text }}/></div>\n                    <div className=\"flexContainer\">\n                            <TOOLTIP tooltiphtml={\"Swipe left for \" + (this.props.falsetrue ? \"FALSE\" : \"NO\")}>\n                                <span className=\"App-link flexStart\" onClick={this.props.handleResponse.bind(this, this.props.counter, false)}>\n                                    {this.props.falsetrue ? \"FALSE\" : \"NO\"} </span>\n                            </TOOLTIP>\n                            <TOOLTIP tooltiphtml={\"Swipe right for \" + (this.props.falsetrue ? \"TRUE\" : \"YES\")}>\n                                <span className=\"App-link flexEnd\" onClick={this.props.handleResponse.bind(this, this.props.counter, true)}>\n                                    {this.props.falsetrue ? \"TRUE\" : \"YES\"} </span>\n                            </TOOLTIP>\n                    </div>\n                </div>\n            </Swipe>\n        </ErrorBoundary>\n        );\n  }\n}\n","\n\nimport React from 'react';\n//import ReactDOM from 'react-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport JSONTree from \"react-json-tree\";\nimport { isWithStatement } from '@babel/types';\n\n//var _ = require('lodash'); //cambio underscore por lodash, mas rapido completo y com menos bugs import _ from 'underscore';\n//var s = require(\"underscore.string\");\nexport default class DEVELOPER extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.allStorage = this.allStorage.bind(this);\n        this.platformData = this.platformData.bind(this);\n      }\n    platformData() {\n        if (this.state.platformData) return this.state.platformData;\n        var aux = {\n          characterSet: document.characterSet,\n          userAgent: navigator.userAgent,\n          cookieEnabled: navigator.cookieEnabled,\n          languages: navigator.languages,\n          maxTouchPoints: navigator.maxTouchPoints,\n          screenwidth: window.screen.width,\n          screenheight: window.screen.height,\n          inwinw: window.innerWidth,\n          inwinh: window.innerHeight,\n          platform: navigator.platform\n        };\n        this.setState({ platformData: aux });\n        return aux;\n    }\n    allStorage() {\n        var archive = {}, // Notice change here\n          keys = Object.keys(localStorage),\n          i = keys.length;\n\n        while (i--) {\n          archive[keys[i]] = this.truncate(localStorage.getItem(keys[i]));\n        }\n        return archive;\n    }\n    truncate(s) {\n        if (s.length < 255) return s;\n        return s.substring(0, 255) + \"...\";\n    }\n    render() {\n        var style = {\n            maxWidth: '30%',\n            position: 'fixed',\n            right: '0px',\n            top: '0px',\n            backgroundColor: 'white'\n        }\n        return ( <ErrorBoundary>\n            {this.props.totalstate.mode === \"DEVELOPER\" &&\n                    (<div style={style}>\n                        <JSONTree data={this.props.totalstate} theme={this.props.theme} />\n                        <JSONTree data={this.platformData()} theme={this.props.theme} />\n                        <JSONTree data={this.allStorage()} theme={this.props.theme} />\n                         <h2 classname={\"App-link\"} onClick={this.props.changeMode.bind('INFO')} >HIDE</h2>\n                    </div>)\n            }\n        </ErrorBoundary>);\n    }\n}","import React from 'react';\nimport './App.css';\nimport SWIPETRISTATE from '../src/components/SWIPETRISTATE';\nimport DEVELOPER from '../src/components/DEVELOPER';\nimport {size} from \"./Util.js\"\nexport default class App extends React.Component {\n    constructor(props) {\n      super(props);\n      /*I don't have time to rewrite with Redux, sorry*/\n      this.state = {\n        page: this.props.page ? this.props.page : 0,  //Keep it simple (KISS), no need for React router and several pages. Single Page Web Apps +cordova is the way to go for mobile\n          //page 0: intro, pages 1-10 questions, page 11: results\n        questions: [],\n        responses: {},\n        nq: this.props.nq ? this.props.nq : 10,\n        mode: 'INFO',\n        countMode: 0,\n      };\n      this.handlePageChange = this.handlePageChange.bind(this);\n      this.handleResponse = this.handleResponse.bind(this);\n      this.loadQuestions = this.loadQuestions.bind(this);\n      this.sumCorrect = this.sumCorrect.bind(this);\n      this.count3 = this.count3.bind(this);\n      this.changeMode = this.changeMode.bind(this);\n    }\n    count3() {  /*3 clicks on title opens the DEVELOPER helper*/\n      var c = this.state.countMode;\n      c += 1;\n      if (c === 3) {\n        this.setState({countMode: 3, mode: 'DEVELOPER'});\n      } else {\n        this.setState({countMode: c});\n      }\n    }\n    changeMode(m) {\n      this.setState({countMode: m==='DEVELOPER' ? 3 : 0, mode: m});\n    }\n    sumCorrect() {\n      var c = 0;\n      for (var z in this.state.responses) {\n        if (this.state.responses.hasOwnProperty(z)) {\n          var b = this.state.responses[z];\n          if (b === this.state.questions[z].correct_answer) {\n            c += 1;\n          }\n        }\n      }\n      return c;\n    }\n    loadQuestions(i) {\n      return fetch('https://opentdb.com/api.php?amount=' + i + '&difficulty=medium&type=boolean')\n        .then(response => response.json())\n        .then(data => this.setState({ questions: data.results }));\n\n    }\n    componentDidMount() {\n      //fecth data from server while user reads page 0, no need for spin\n      this.loadQuestions(this.state.nq);\n    }\n    handlePageChange(i, evt) {\n      if (i === 100) { //new test, ask for new questions from server\n        this.loadQuestions(this.state.nq);\n        i = 1;\n      }\n      console.log(\"new page to state: \" + i);\n      this.setState({\n        page: i\n      })\n    }\n    handleResponse(i, b, evt) {\n      console.log(\"saving response: \" + (i-1)+\"  \"+b);\n      var r = this.state.responses;\n      r[i-1] = b ? \"True\" : \"False\"; //save string to compare with questions.correct_answer\n      this.setState({\n        responses: r,\n        page: i+1\n      })\n    }\n    render() {\n      var rows = [];\n      for (var i = 0; i <size(this.state.responses); i++) {\n        var q = this.state.questions[i];\n        rows.push(<small className=\"flexContainer\"><span dangerouslySetInnerHTML={{ __html: (i + 1) + \": \" + q.question }} />\n          <span className={q.correct_answer !== this.state.responses[i] ? \"red\" : \"green\"}>\n          &nbsp;&nbsp;&nbsp;{q.correct_answer.toUpperCase()}</span><br/></small>);\n      }\n      var p = this.state.page;\n      return ( <div className = \"App\">\n        <header className = \"App-header\">\n\n        {p === 0 && <div><p  onClick={this.count3}> Welcome to the Trivia Challenge! </p><br></br><br></br>\n            <p>You will be presented with {this.state.nq} True of False questions.</p></div>}\n\n        {p === 0 && <div><p></p><p>Can you score 100%?</p></div>}\n          {/* don't show BEGIN button until questions arrive from server */}\n        {p === 0 && this.state.questions.length>0 && <div className=\"App-link\" onClick={this.handlePageChange.bind(this, 1)}> BEGIN </div>}\n\n        {/*p > 0 && p<11 && <div><p></p><p>{this.state.questions[p-1].category}</p></div> }\n          {p > 0 && p < 11 && <div><p></p><p className=\"flexContainer\" dangerouslySetInnerHTML={{ __html: p+\": \"+this.state.questions[p-1].question }}/></div> }\n        {p > 0 && p < 11 && <div className=\"flexContainer\"><span className=\"App-link flexStart\" onClick={this.handleResponse.bind(this, p-1, false)}> FALSE </span>\n        <span className=\"App-link flexEnd\" onClick={this.handleResponse.bind(this, p-1, true)}> TRUE </span></div>*/}\n\n          {p > 0 && p <= this.state.nq && <SWIPETRISTATE falsetrue={true} counter={p} text={p + \": \" + this.state.questions[p - 1].question}\n            title={this.state.questions[p - 1].category} handleResponse={this.handleResponse}></SWIPETRISTATE>}\n\n        {p === this.state.nq+1 && <div><p> You scored </p><p>{this.sumCorrect()} / {size(this.state.responses)}</p><br /></div>}\n        {p === this.state.nq+1 && <div>{rows}</div>}\n        {p === this.state.nq+1 && <p></p>}\n        {p === this.state.nq+1 &&  <div className=\"App-link\" onClick={this.handlePageChange.bind(this, 100)}> NEW TEST </div>}\n\n\n\n        </header>\n        <DEVELOPER changeMode={this.changeMode} totalstate={this.state}/>\n        </div>\n      );\n    }\n  }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App nq={10} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}